version: '3.3'
services:
  gateway: 
    image: gamerhighlights-gateway
    hostname: gateway
    ports: 
      - "8000:80"
  message-broker:
    image: rabbitmq:3.8-management
    hostname: message-broker
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
  service-authentication: # <--- this is the name of the service and should be unique.
    image: service-authentication:0.0.1-SNAPSHOT # <--- this is the image of which the service will be based upon.
    hostname: service-authentication # <--- this will be the hostname it will be known as.
    restart: always # <--- if it fails, always restart.
    depends_on:
      user-mysql:
        condition: service_healthy
  service-user: # <--- this is the name of the service and should be unique.
    image: service-user:0.0.1-SNAPSHOT # <--- this is the image of which the service will be based upon.
    hostname: service-user # <--- this will be the hostname it will be known as.
    restart: always # <--- if it fails, always restart.
    depends_on:
      user-mysql:
        condition: service_healthy
  # user-mysql:
  #   image: mysql
  #   environment:
  #     - MYSQL_ROOT_PASSWORD=P@ssw0rd
  #   healthcheck:
  #     test: mysqladmin ping -h 127.0.0.1 -u root --password=$$MYSQL_ROOT_PASSWORD
  #     timeout: 10s
  #     retries: 10
  service-post: # <--- this is the name of the service and should be unique.
    image: service-post:0.0.1-SNAPSHOT # <--- this is the image of which the service will be based upon.
    hostname: service-post # <--- this will be the hostname it will be known as.
    restart: always # <--- if it fails, always restart.
    ports:
      - 9002:9002 # <-- bind the host port 8081 to whatever is running in the container on 8080.
  # image-mongodb:
  #   image : mongo
  #   container_name: post-mongodb
  #   environment:
  #   - PUID=1000
  #   - PGID=1000
  #   ports:
  #   - 27017:27017
  #   restart: unless-stopped
  service-comment: # <--- this is the name of the service and should be unique.
    image: service-comment:0.0.1-SNAPSHOT # <--- this is the image of which the service will be based upon.
    hostname: service-comment # <--- this will be the hostname it will be known as.
    restart: always # <--- if it fails, always restart.
    ports:
      - 9003:9003 # <-- bind the host port 8081 to whatever is running in the container on 8080.
  # comment-mysql:
  #   image: mysql
  #   environment:
  #     - MYSQL_ROOT_PASSWORD=P@ssw0rd
  #   healthcheck:
  #     test: mysqladmin ping -h 127.0.0.1 -u root --password=$$MYSQL_ROOT_PASSWORD
  #     timeout: 10s
  #     retries: 10
  service-image: # <--- this is the name of the service and should be unique.
    image: service-image:0.0.1-SNAPSHOT # <--- this is the image of which the service will be based upon.
    hostname: service-image # <--- this will be the hostname it will be known as.
    restart: always # <--- if it fails, always restart.
  # image-mongodb:
  #   image : mongo
  #   container_name: image-mongodb
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #   ports:
  #   - 27017:27017
  #   restart: unless-stopped
  service-likes: # <--- this is the name of the service and should be unique.
    image: service-likes:0.0.1-SNAPSHOT # <--- this is the image of which the service will be based upon.
    hostname: service-likes # <--- this will be the hostname it will be known as.
    restart: always # <--- if it fails, always restart.
  # likes-mysql:
  #   image: mysql
  #   environment:
  #     - MYSQL_ROOT_PASSWORD=P@ssw0rd
  #   healthcheck:
  #     test: mysqladmin ping -h 127.0.0.1 -u root --password=$$MYSQL_ROOT_PASSWORD
  #     timeout: 10s
  #     retries: 10


