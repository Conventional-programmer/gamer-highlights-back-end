stages:
    - analysis
    - test
    - build
    - deploy
authentication_service_build:
    image:
        name: maven:3.6-jdk-11
    stage: build
    only:
        changes:
            - "code/service-authentication-jwt/*"
    script: "mvn clean package -f code/service-authentication-jwt/pom.xml"
    artifacts:
        paths:
            - code/service-likes/target/*.jar

authentication_service_test:
    image:
        name: maven:3.6-jdk-11
    stage: test
    only:
        changes:
            - "codeservice-authentication-jwt/*"
    script:
        - cd code/service-authentication-jwt
        - mvn test
authentication-service-deploy:
    image:
        name: docker:latest
    stage: deploy
    script:
    - docker build code/service-authentication-jwt -t "$CI_REGISTRY_IMAGE_PREFIX/service-authentication:$CI_COMMIT_REF_SLUG" -t "$CI_REGISTRY_IMAGE_PREFIX/service-authentication:latest"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker push --all-tags "$CI_REGISTRY_IMAGE_PREFIX/service-authentication"
    only:
    - main
authentication-service-sonar:
    image:
        name: maven:3.6-jdk-11
    stage: analysis
    script:
    - cd code/service-authentication-jwt
    - mvn sonar:sonar \   -Dsonar.projectKey=gamerhighlights-service-authentication \   -Dsonar.host.url=http://localhost:9000 \   -Dsonar.login=f78bf766b1b5edc0aa28620d41865c3fd7b472bf
user_service_build:
    image:
        name: maven:3.6-jdk-11
    stage: build
    only:
        changes:
            - "code/service-user/*"
    script: "mvn clean package -f code/service-user/pom.xml"
    artifacts:
        paths:
            - code/service-user/target/*.jar

user_service_test:
    image:
        name: maven:3.6-jdk-11
    stage: test
    only:
        changes:
            - "code/service-user/*"
    script:
        - cd code/service-user
        - mvn test
user-service-deploy:
    image:
        name: docker:latest
    stage: deploy
    script:
    - docker build code/service-user -t "$CI_REGISTRY_IMAGE_PREFIX/service-user:$CI_COMMIT_REF_SLUG" -t "$CI_REGISTRY_IMAGE_PREFIX/service-likes:latest"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker push --all-tags "$CI_REGISTRY_IMAGE_PREFIX/service-user"
    only:
    - main
comment_service_build:
    image:
        name: maven:3.6-jdk-11
    stage: build
    only:
        changes:
            - "code/service-comment/*"
    script: "mvn clean package -f code/service-comment/pom.xml"
    artifacts:
        paths:
            - code/service-comment/target/*.jar

comment_service_test:
    image:
        name: maven:3.6-jdk-11
    stage: test
    only:
        changes:
            - "code/service-comment/*"
    script:
        - cd code/service-comment
        - mvn test
comment-service-deploy:
    image:
        name: docker:latest
    stage: deploy
    script:
    - docker build code/service-comment -t "$CI_REGISTRY_IMAGE_PREFIX/service-comment:$CI_COMMIT_REF_SLUG" -t "$CI_REGISTRY_IMAGE_PREFIX/service-likes:latest"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker push --all-tags "$CI_REGISTRY_IMAGE_PREFIX/service-comment"
    only:
    - main

image_service_build:
    image:
        name: maven:3.6-jdk-11
    stage: build
    only:
        changes:
            - "code/service-likes/*"
    script: "mvn clean package -f code/service-likes/pom.xml"
    artifacts:
        paths:
            - code/service-likes/target/*.jar

image_service_test:
    image:
        name: maven:3.6-jdk-11
    stage: test
    only:
        changes:
            - "code/service-likes/*"
    script:
        - cd code/service-likes
        - mvn test
image-service-deploy:
    image:
        name: docker:latest
    stage: deploy
    script:
    - docker build code/service-likes -t "$CI_REGISTRY_IMAGE_PREFIX/service-likes:$CI_COMMIT_REF_SLUG" -t "$CI_REGISTRY_IMAGE_PREFIX/service-likes:latest"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker push --all-tags "$CI_REGISTRY_IMAGE_PREFIX/service-likes"
    only:
    - main
like_service_build:
    image:
        name: maven:3.6-jdk-11
    stage: build
    only:
        changes:
            - "code/service-likes/*"
    script: "mvn clean package -f code/service-likes/pom.xml"
    artifacts:
        paths:
            - code/service-likes/target/*.jar

like_service_test:
    image:
        name: maven:3.6-jdk-11
    stage: test
    only:
        changes:
            - "code/service-likes/*"
    script:
        - cd code/service-likes
        - mvn test
like-service-deploy:
    image:
        name: docker:latest
    stage: deploy
    script:
    - docker build code/service-likes -t "$CI_REGISTRY_IMAGE_PREFIX/service-likes:$CI_COMMIT_REF_SLUG" -t "$CI_REGISTRY_IMAGE_PREFIX/service-likes:latest"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker push --all-tags "$CI_REGISTRY_IMAGE_PREFIX/service-likes"
    only:
    - main
post_service_build:
    image:
        name: maven:3.6-jdk-11
    stage: build
    only:
        changes:
            - "code/service-post/*"
    script: "mvn clean package -f code/service-post/pom.xml"
    artifacts:
        paths:
            - code/service-post/target/*.jar

post_service_test:
    image:
        name: maven:3.6-jdk-11
    stage: test
    only:
        changes:
            - "code/service-post/*"
    script:
        - cd code/service-post
        - mvn test
post-service-deploy:
    image:
        name: docker:latest
    stage: deploy
    script:
    - docker build code/service-post -t "$CI_REGISTRY_IMAGE_PREFIX/service-post:$CI_COMMIT_REF_SLUG" -t "$CI_REGISTRY_IMAGE_PREFIX/service-likes:latest"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker push --all-tags "$CI_REGISTRY_IMAGE_PREFIX/service-post"
    only:
    - main
post-service-sonar:
    image:
        name: maven:3.6-jdk-11
    stage: analysis
    script:
    - mvn sonar:sonar \   -Dsonar.projectKey=gamerhighlights-post \   -Dsonar.host.url=http://localhost:9000 \   -Dsonar.login=8a7d052bfbe10e6062cc0fa8e40129076db34e8f
