stages:
    - build
    - test
    - intergration
    - analysis
    - deploy

authentication_service_build:
    image:
        name: maven:3.6-jdk-11
    stage: build
    only:
        changes:
            - "code/service-authentication-jwt/*"
    script: "mvn clean package -f code/service-authentication-jwt/pom.xml"
    artifacts:
        paths:
            - code/service-likes/target/*.jar

authentication_service_test:
    image:
        name: maven:3.6-jdk-11
    stage: test
    only:
        changes:
            - "codeservice-authentication-jwt/*"
    script:
        - cd code/service-authentication-jwt
        - mvn test
authentication-service-deploy:
    image:
        name: docker:latest
    stage: deploy
    script:
    - docker build code/service-authentication-jwt -t "$CI_REGISTRY_IMAGE_PREFIX/authentication-service:$CI_COMMIT_REF_SLUG" -t "$CI_REGISTRY_IMAGE_PREFIX/authentication-service:latest"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker push --all-tags "$CI_REGISTRY_IMAGE_PREFIX/authentication-service"
    only:
    - main
authentication-service-sonar:
    image:
        name: maven:3.6-jdk-11
    only:
        changes:
            - "codeservice-authentication-jwt/*"
    stage: analysis
    script:
    - cd code/service-authentication-jwt
    - mvn package
    - mvn sonar:sonar -Dsonar.projectKey=gamerhighlight-auth -Dsonar.host.url=http://host.docker.internal:9000 -Dsonar.login=94c4e71e0432ecf8837fa8ec28f36f92b0c38f96
user_service_build:
    image:
        name: maven:3.6-jdk-11
    stage: build
    only:
        changes:
            - "code/service-user/*"
    script: "mvn clean package -f code/service-user/pom.xml"
    artifacts:
        paths:
            - code/service-user/target/*.jar

user_service_test:
    image:
        name: maven:3.6-jdk-11
    stage: test
    only:
        changes:
            - "code/service-user/*"
    script:
        - cd code/service-user
        - mvn test
user-service-deploy:
    image:
        name: docker:latest
    stage: deploy
    script:
    - docker build code/service-user -t "$CI_REGISTRY_IMAGE_PREFIX/gamehighlights-user-service:$CI_COMMIT_REF_SLUG" -t "$CI_REGISTRY_IMAGE_PREFIX/gamehighlights-user-service:latest"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker push --all-tags "$CI_REGISTRY_IMAGE_PREFIX/gamehighlights-user-service"
    only:
    - main
user-service-sonar:
    image:
        name: maven:3.6-jdk-11
    only:
        changes:
            - "code/service-user/*"
    stage: analysis
    script:
    - cd code/service-user
    - mvn package
    - mvn sonar:sonar -Dsonar.projectKey=gamer-highlights_user -Dsonar.host.url=http://host.docker.internal:9000 -Dsonar.login=0800fb60d949e4ac5e4592e697dcf52a558a2b32
comment_service_build:
    image:
        name: maven:3.6-jdk-11
    stage: build
    only:
        changes:
            - "code/service-comment/*"
    script: "mvn clean package -f code/service-comment/pom.xml"
    artifacts:
        paths:
            - code/service-comment/target/*.jar

comment_service_test:
    image:
        name: maven:3.6-jdk-11
    stage: test
    only:
        changes:
            - "code/service-comment/*"
    script:
        - cd code/service-comment
        - mvn test
comment-service-deploy:
    image:
        name: docker:latest
    stage: deploy
    script:
    - docker build code/service-comment -t "$CI_REGISTRY_IMAGE_PREFIX/gamehighlights-comment-service:$CI_COMMIT_REF_SLUG" -t "$CI_REGISTRY_IMAGE_PREFIX/service-likes:latest"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker push --all-tags "$CI_REGISTRY_IMAGE_PREFIX/gamehighlights-comment-service"
    only:
    - main
comment-service-sonar:
    image:
        name: maven:3.6-jdk-11
    only:
        changes:
            - "code/service-comment/*"
    stage: analysis
    script:
    - cd code/service-comment
    - mvn package
    - mvn sonar:sonar -Dsonar.projectKey=gamer-highlights_comment -Dsonar.host.url=http://host.docker.internal:9000 -Dsonar.login=8b5c23eadc9ffd0b6b0d667aaba3d61ea665d98b
image_service_build:
    image:
        name: maven:3.6-jdk-11
    stage: build
    only:
        changes:
            - "code/service-likes/*"
    script: "mvn clean package -f code/service-likes/pom.xml"
    artifacts:
        paths:
            - code/service-likes/target/*.jar

image_service_test:
    image:
        name: maven:3.6-jdk-11
    stage: test
    only:
        changes:
            - "code/service-likes/*"
    script:
        - cd code/service-likes
        - mvn test
image-service-deploy:
    image:
        name: docker:latest
    stage: deploy
    script:
    - docker build code/service-likes -t "$CI_REGISTRY_IMAGE_PREFIX/gamehighlights-image-service:$CI_COMMIT_REF_SLUG" -t "$CI_REGISTRY_IMAGE_PREFIX/gamehighlights-image-service:latest"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker push --all-tags "$CI_REGISTRY_IMAGE_PREFIX/gamehighlights-image-service"
    only:
    - main
image-service-sonar:
    image:
        name: maven:3.6-jdk-11
    only:
        changes:
            - "code/service-likes/*"
    stage: analysis
    script:
    - cd code/service-likes
    - mvn package
    - mvn sonar:sonar -Dsonar.projectKey=gamer-highlights_image -Dsonar.host.url=http://host.docker.internal:9000 -Dsonar.login=a400efa988c4cdb213d7dbdc571834c22569241d
like_service_build:
    image:
        name: maven:3.6-jdk-11
    stage: build
    only:
        changes:
            - "code/service-likes/*"
    script: "mvn clean package -f code/service-likes/pom.xml"
    artifacts:
        paths:
            - code/service-likes/target/*.jar

like_service_test:
    image:
        name: maven:3.6-jdk-11
    stage: test
    only:
        changes:
            - "code/service-likes/*"
    script:
        - cd code/service-likes
        - mvn test
like-service-deploy:
    image:
        name: docker:latest
    stage: deploy
    script:
    - docker build code/service-likes -t "$CI_REGISTRY_IMAGE_PREFIX/gamehiglights-like-service:$CI_COMMIT_REF_SLUG" -t "$CI_REGISTRY_IMAGE_PREFIX/gamehiglights-like-service:latest"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker push --all-tags "$CI_REGISTRY_IMAGE_PREFIX/gamehiglights-like-service"
    only:
    - main
likes-service-sonar:
    only:
        changes:
            - "code/service-likes/*"
    image:
        name: maven:3.6-jdk-11
    stage: analysis
    script:
    - cd code/service-likes
    - mvn package 
    - mvn sonar:sonar -Dsonar.projectKey=game-highlights_likes -Dsonar.host.url=http://host.docker.internal:9000  -Dsonar.login=ec6babee6541205e94fae0b4e5afdca99ec081d4
post_service_build:
    image:
        name: maven:3.6-jdk-11
    stage: build
    only:
        changes:
            - "code/service-post/*"
    script: "mvn clean package -f code/service-post/pom.xml"
    artifacts:
        paths:
            - code/service-post/target/*.jar

post_service_test:
    image:
        name: maven:3.6-jdk-11
    stage: test
    only:
        changes:
            - "code/service-post/*"
    script:
        - cd code/service-post
        - mvn test
post_service_intergration:
    services:
        - caskamp/gamehighlights-comment-service:main
    image:
        name: maven:3.6-jdk-11
    stage: intergration
    only:
        changes:
            - "code/service-post/*"
    script:
        - cd code/service-post
        - mvn integration-test
post-service-deploy:
    image:
        name: docker:latest
    stage: deploy
    script:
    - docker build code/service-post -t "$CI_REGISTRY_IMAGE_PREFIX/gamehighlights-post-service:$CI_COMMIT_REF_SLUG" -t "$CI_REGISTRY_IMAGE_PREFIX/gamehighlights-post-service:latest"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker push --all-tags "$CI_REGISTRY_IMAGE_PREFIX/gamehighlights-post-service"
    only:
    - main
post-service-sonar:
    only:
        changes:
            - "code/service-post/*"
    image:
        name: maven:3.6-jdk-11
    stage: analysis
    script:
    - cd code/service-post
    - mvn package 
    - mvn sonar:sonar -Dsonar.projectKey=gamer-highlights-post -Dsonar.host.url=http://host.docker.internal:9000  -Dsonar.login=8dc7591f4f22e2273775d75a8a5ec23e2134547e
